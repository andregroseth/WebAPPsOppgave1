@model WebAppsProsjekt1.Models.User
@{
	ViewBag.Title = "UserLogin";
	Layout = "~/Views/Shared/Background.cshtml";
	@Styles.Render("~/Content/css/cssUser/UserLogin.css")
}

	@if (Session["Login"] != null)
	{
		Session["LoginAlready"] = "true";
		Response.Redirect("/Movie/MovieList");
	}
	else if (Session["LoginFailed"] != null)
	{
		<script type="text/javascript">
			$(window).on('load', function () {
				showFeedbackModal("Login failed.", "red");
			});
		</script>
		Session.Remove("LoginFailed");
	}
	else if (Session["PurchaseFailedLogin"] != null)
	{
		<script type="text/javascript">
			$(window).on('load', function () {
				showFeedbackModal("Login session is required for order.", "red");
			});
		</script>
		Session.Remove("PurchaseFailedLogin");
	}

@Html.Partial("~/Views/Modal/feedbackModal.cshtml")

<div class="container">
	<div class="main-div">
		@if (Session["Login"] != null)
		{
			<h2>@Session["Login"].ToString()</h2>
		}
		@using (Html.BeginForm())
		{
			try
			{
				@Html.AntiForgeryToken()
				<div class="form-headers">
					<h1 class="login">Login</h1>
				</div>
				<div class="form-group">
					@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
					</div>
				</div>

				<div class="form-group">
					<div class="col-md-offset-2 col-md-10">
						<input type="submit" class="btn btn-success" id="login" />
					</div>
				</div>
			}
			catch (System.Web.HttpException)
			{
				return;
			}
		}
		<div class="col-md-offset-2 col-md-10">
			<a href="/User/UserRegister">Sign up</a>
		</div>
	</div>
</div>
</body>
</html>
